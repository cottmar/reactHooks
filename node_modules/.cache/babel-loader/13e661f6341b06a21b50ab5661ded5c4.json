{"ast":null,"code":"import _slicedToArray from \"/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/src/Components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar todo = function todo(props) {\n  // just caling a function provided by react (useState)\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoName = _useState2[0],\n      setTodoName = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoList = _useState4[0],\n      setTodoList = _useState4[1]; // useEffect will execute when the function runs for the first time\n\n\n  useEffect(function () {\n    axios.post('https://reacthooks-b84d8.firebaseio.com/todos.json').then(function (result) {\n      console.log(result);\n      var todoData = result.data;\n      var todos = [];\n\n      for (var key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      }\n\n      setTodoList(todos);\n    });\n    return function () {\n      console.log('Cleanup');\n    };\n  }, []);\n\n  var mouseMoveHandler = function mouseMoveHandler(event) {\n    console.log(event.clientX, event.clientY);\n  };\n\n  useEffect(function () {\n    document.addEventListener('mousemove', mouseMoveHandler);\n    return function () {\n      document.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, []);\n\n  var inputChangeHandler = function inputChangeHandler(event) {\n    setTodoName(event.target.value);\n  }; // since we are setting new value, we override the old one\n  // concat returns a new array\n\n\n  var todoAddHandler = function todoAddHandler() {\n    setTodoList(todoList.concat(todoName));\n    axios.post('https://reacthooks-b84d8.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }; //   setTodoState({\n  //     userInput: todoState.userInput,\n  //     todoList: todoState.todoList.concat(todoState.userInput)\n  //   });\n  // };\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: todoName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, todoList.map(function (todo) {\n    return React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, todo.name);\n  })));\n};\n\nexport default todo; // useState tells us its a hook function\n// can pass anything into useState, whatever state you want to manage\n// gives first string as entire element inputState[0]\n// inputSTate[] is the reference to a function and reference when onchange triggers\n// function in a function is fine in JS\n// you can't call useState in a function of a function\n// cannot call useState in any form of nesting, only at the root","map":{"version":3,"sources":["/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/src/Components/Todo.js"],"names":["React","useState","useEffect","axios","todo","props","todoName","setTodoName","todoList","setTodoList","post","then","result","console","log","todoData","data","todos","key","push","id","name","mouseMoveHandler","event","clientX","clientY","document","addEventListener","removeEventListener","inputChangeHandler","target","value","todoAddHandler","concat","res","catch","err","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst todo = props => {\n  // just caling a function provided by react (useState)\n  // const inputState = useState('');\n  const [todoName, setTodoName] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  // useEffect will execute when the function runs for the first time\n  useEffect(() => {\n    axios.post('https://reacthooks-b84d8.firebaseio.com/todos.json').then(result => {\n      console.log(result);\n      const todoData = result.data;\n      const todos = [];\n      for (const key in todoData) {\n        todos.push({id: key, name: todoData[key].name})\n      }\n      setTodoList(todos);\n    });\n    return () => {\n      console.log('Cleanup');\n    };\n  }, []);\n\n  const mouseMoveHandler = event => {\n    console.log(event.clientX, event.clientY);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousemove', mouseMoveHandler);\n    return () => {\n      document.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, []);\n\n  const inputChangeHandler = (event) => {\n    setTodoName(event.target.value);\n  };\n\n  // since we are setting new value, we override the old one\n  // concat returns a new array\n  const todoAddHandler = () => {\n    setTodoList(todoList.concat(todoName));\n    axios.post('https://reacthooks-b84d8.firebaseio.com/todos.json', {name: todoName})\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  };\n  //   setTodoState({\n  //     userInput: todoState.userInput,\n  //     todoList: todoState.todoList.concat(todoState.userInput)\n  //   });\n  // };\n\n  return <React.Fragment>\n    <input\n       type=\"text\"\n       placeholder=\"Todo\"\n       onChange={inputChangeHandler}\n       value={todoName}\n       />\n    <button type=\"button\" onClick={todoAddHandler}>Add</button>\n    <ul>\n      {todoList.map(todo => (\n         <li key={todo.id}>{todo.name}</li>\n      ))}\n    </ul>\n  </React.Fragment>;\n}\n\nexport default todo;\n\n// useState tells us its a hook function\n// can pass anything into useState, whatever state you want to manage\n// gives first string as entire element inputState[0]\n// inputSTate[] is the reference to a function and reference when onchange triggers\n// function in a function is fine in JS\n// you can't call useState in a function of a function\n// cannot call useState in any form of nesting, only at the root"]},"metadata":{},"sourceType":"module"}