{"ast":null,"code":"import _slicedToArray from \"/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/src/App.js\";\n\nimport React, { useState } from 'react';\nimport Header from './Components/Header';\nimport Auth from './Components/Auth';\nimport Todo from './Components/Todo';\nimport AuthContext from './auth-context';\n\nvar app = function app(props) {\n  var _useState = useState('auth'),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authStatus = _useState4[0],\n      setAuthStatus = _useState4[1];\n\n  var switchPage = function switchPage(pageName) {\n    setPage(pageName);\n  };\n\n  var login = function login() {\n    setAuthState(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(AuthContext.Provider, {\n    value: {\n      status: authStatus,\n      login: login\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Header, {\n    onLoadTodos: switchPage.bind(_this, 'todos'),\n    onLoadAuth: switchPage.bind(_this, 'auth'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), page === 'auth' ? React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(Todo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nexport default app;","map":{"version":3,"sources":["/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/src/App.js"],"names":["React","useState","Header","Auth","Todo","AuthContext","app","props","page","setPage","authStatus","setAuthStatus","switchPage","pageName","login","setAuthState","status","bind"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,kBACKN,QAAQ,CAAC,MAAD,CADb;AAAA;AAAA,MACZO,IADY;AAAA,MACNC,OADM;;AAAA,mBAEiBR,QAAQ,CAAC,KAAD,CAFzB;AAAA;AAAA,MAEZS,UAFY;AAAA,MAEAC,aAFA;;AAKnB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC/BJ,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAEN,UAAT;AAAqBI,MAAAA,KAAK,EAAEA;AAA5B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEF,UAAU,CAACK,IAAX,CAAgB,KAAhB,EAAsB,OAAtB,CAArB;AAAqD,IAAA,UAAU,EAAEL,UAAU,CAACK,IAAX,CAAgB,KAAhB,EAAsB,MAAtB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGT,IAAI,KAAK,MAAT,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA6B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhC,CADA,CADF;AASD,CAtBD;;AAyBA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Header from './Components/Header';\nimport Auth from './Components/Auth';\nimport Todo from './Components/Todo';\nimport AuthContext from './auth-context';\n\nconst app = props => {\n  const [page, setPage] = useState('auth');\n  const [authStatus, setAuthStatus] = useState(false);\n\n\n  const switchPage = (pageName) => {\n    setPage(pageName);\n  }\n\n  const login = () => {\n    setAuthState(true);\n  }\n\n  return (\n    <div className=\"App\">\n    <AuthContext.Provider value={{status: authStatus, login: login}}>\n      <Header onLoadTodos={switchPage.bind(this, 'todos')} onLoadAuth={switchPage.bind(this, 'auth')}/>\n      <hr />\n      {page === 'auth' ? <Auth /> : <Todo/>}\n      </AuthContext.Provider>\n    </div>\n  );\n};\n\n\nexport default app;\n"]},"metadata":{},"sourceType":"module"}