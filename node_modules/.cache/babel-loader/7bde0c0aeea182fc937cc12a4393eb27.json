{"ast":null,"code":"import _slicedToArray from \"/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nexport var useFormInput = function useFormInput() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validity = _useState4[0],\n      setValidity = _useState4[1];\n\n  var inputChangeHandler = function inputChangeHandler(event) {\n    setValue(event.target.value);\n\n    if (event.target.value.trim() === '') {\n      setValidity(false);\n    } else {\n      setValidity(true);\n    }\n  };\n\n  return {\n    value: value,\n    onChange: inputChangeHandler,\n    validity: validity\n  };\n};","map":{"version":3,"sources":["/Users/caraottmar/PersonalProjects/react/react-refresh/hooks/reactHooks/src/hooks/forms.js"],"names":["useState","useFormInput","value","setValue","validity","setValidity","inputChangeHandler","event","target","trim","onChange"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACND,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MACzBE,KADyB;AAAA,MAClBC,QADkB;;AAAA,mBAEAH,QAAQ,CAAC,KAAD,CAFR;AAAA;AAAA,MAEzBI,QAFyB;AAAA,MAEfC,WAFe;;AAIhC,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAClCJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;;AACA,QAAIK,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBO,IAAnB,OAA8B,EAAlC,EAAsC;AACpCJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAPD;;AASA,SAAO;AAAEH,IAAAA,KAAK,EAAEA,KAAT;AAAgBQ,IAAAA,QAAQ,EAAEJ,kBAA1B;AAA8CF,IAAAA,QAAQ,EAARA;AAA9C,GAAP;AACD,CAdM","sourcesContent":["import { useState } from 'react';\n\nexport const useFormInput = () => {\n  const [value, setValue] = useState('');\n  const [validity, setValidity] = useState(false);\n\n  const inputChangeHandler = event => {\n    setValue(event.target.value);\n    if (event.target.value.trim() === '') {\n      setValidity(false);\n    } else {\n      setValidity(true);\n    }\n  };\n\n  return { value: value, onChange: inputChangeHandler, validity };\n};\n"]},"metadata":{},"sourceType":"module"}